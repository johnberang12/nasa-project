{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jober/Desktop/nodeProjects/nasa-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jober/Desktop/nodeProjects/nasa-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-template-curly-in-string */var API_URL='http://localhost:8000';// TODO: Once API is ready.\n// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://localhost:8000/planets');case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(API_URL+'/launches');case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(API_URL+'/launches',{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(API_URL+'/launches/'+id,{method:\"delete\"});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/jober/Desktop/nodeProjects/nasa-project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"qVAAA,gDACA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,CAEC;AACC;QACaC,CAAAA,c,oJAAf,sKACyBC,CAAAA,KAAK,CAAC,+BAAD,CAD9B,QACQC,QADR,qCAEeA,CAAAA,QAAQ,CAACC,IAAT,EAFf,6G,yDAMeC,CAAAA,e,uJAAf,4LAGyBH,CAAAA,KAAK,CAACF,OAAO,CAAG,WAAX,CAH9B,QAGQG,QAHR,uCAIgCA,CAAAA,QAAQ,CAACC,IAAT,EAJhC,QAIQE,eAJR,iDAKSA,eAAe,CAACC,IAAhB,CAAqB,SAACC,CAAD,CAAGC,CAAH,CAAO,CACjC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CALT,0D,0DAUeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAIeV,CAAAA,KAAK,CAACF,OAAO,CAAC,WAAT,CAAsB,CACtCa,MAAM,CAAE,MAD8B,CAEtCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAF6B,CAKtCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALgC,CAAtB,CAJpB,qJAYS,CACLM,EAAE,CAAE,KADC,CAZT,uE,2DAqBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAKiBlB,CAAAA,KAAK,CAACF,OAAO,CAAC,YAAR,CAAqBoB,EAAtB,CAA0B,CAC1CP,MAAM,CAAE,QADkC,CAA1B,CALtB,qJASU,CACJK,EAAE,CAAE,KADA,CATV,uE,kDAiBA,OACEjB,cADF,CAEEI,eAFF,CAGEM,gBAHF,CAIEQ,eAJF","sourcesContent":["/* eslint-disable no-template-curly-in-string */\nconst API_URL = 'http://localhost:8000';\n\n // TODO: Once API is ready.\n  // Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch('http://localhost:8000/planets')\n  return await response.json();\n \n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(API_URL + '/launches');\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a,b)=>{\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\ntry{\n  return await fetch(API_URL+'/launches', {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(launch),\n  })\n} catch(e){\n  return {\n    ok: false,\n  }\n}\n\n  \n\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n\n  try{\n    return await fetch(API_URL+'/launches/'+id, {\n      method: \"delete\",\n    });\n  } catch(e){\n    return{\n      ok: false,\n    }\n  }\n\n\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}